name: imageToTo
on:
  push:
    branches: [ "main" ]
    paths-ignore:
      - 'done.db'
      - 'error.log'
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a multi-line script
        run: |
          set -x
          sudo apt-get -y update
          sudo apt-get -y install skopeo
          skopeo login  --username=${{ secrets.HARBOR_PUSH_USERNAME }} --password=${{ secrets.HARBOR_PUSH_PASSWORD }} harbor.cncfstack.com

          # 处理已经处理过的镜像的行数
          done_line=`cat done.db`
          next_line=$(($done_line + 1)) 

          echo '' > error.log

          for img in `tail -n +$next_line images.list`
          do
              # 删除镜像仓库的地址信息，如删除掉docker.io只保留后面仓库的信息
              img_name="${img#*/}"
              # 在镜像名称中获取项目名
              img_project="${img_name%%/*}" 

              # 创建项目
              curl -k -X POST "https://harbor.cncfstack.com/api/v2.0/projects" \
                  --header "Content-Type: application/json" \
                  -u ${{ secrets.HARBOR_PUSH_USERNAME }}:${{ secrets.HARBOR_PUSH_PASSWORD }} \
                  -d '{"project_name": "'${img_project}'", "public": true}'

              skopeo copy --multi-arch all docker://$img  docker://harbor.cncfstack.com/$img_name || echo "pull error $img" >>  error.log
              # 不同的平台会集中存储一起，同时会在根目录创建项目
              skopeo copy --multi-arch all docker://$img  docker://harbor.cncfstack.com/$img || echo "pull error $img" >>  error.log

          done

          # 处理完成后，需要更新 done.db 文件行数
          cat images.list|wc -l|tr -d ' ' > done.db

          if [ -s error.log ];then
             cat error.log
          fi
      - name: Configure Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      - name: Commit changes
        run: |
          git add .
          git commit -m "Action Robot: sync images lines [skip ci]"
          # [skip ci] 避免触发新工作流循环
      # 5. 推送更改
      - name: Push changes
        run: git push origin HEAD:${{ github.ref }}
