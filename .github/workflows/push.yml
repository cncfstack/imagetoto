name: imageToTo
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run a multi-line script
        run: |
          set -x
          sudo apt-get -y update
          sudo apt-get -y install skopeo
          skopeo login  --username=${{ secrets.HARBOR_PUSH_USERNAME }} --password=${{ secrets.HARBOR_PUSH_PASSWORD }} harbor.cncfstack.com

          # 处理已经处理过的镜像的行数
          done_line=`cat done.db`

          for img in `tail -n +$done_line images.list`
          do
              # 删除镜像仓库的地址信息，如删除掉docker.io只保留后面仓库的信息
              img_name="${img#*/}"
              # 在镜像名称中获取项目名
              img_project="${img_name%%/*}" 

              # 创建项目
              curl -k -X POST "https://harbor.cncfstack.com/api/v2.0/projects" \
                  --header "Content-Type: application/json" \
                  -u ${{ secrets.HARBOR_PUSH_USERNAME }}:${{ secrets.HARBOR_PUSH_PASSWORD }} \
                  -d '{"project_name": "'${img_project}'", "public": true}'

              skopeo copy --multi-arch all docker://$img  docker://harbor.cncfstack.com/$img_name
              if [ $? -ne 0 ];then
                  echo "pull error $img" >>  tmpfile
                  continue
              fi
          done

          if [ -f tmpfile ];then
             cat tmpfile
          fi